/*
Deployment script for HRManagement

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HRManagement"
:setvar DefaultFilePrefix "HRManagement"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[Admin]...';


GO
CREATE TABLE [dbo].[Admin] (
    [AdminStatus]          BIT           NOT NULL,
    [AdminID]              INT           IDENTITY (101, 1) NOT NULL,
    [EmployeeID]           INT           NOT NULL,
    [FirstName]            NVARCHAR (50) NOT NULL,
    [LastName]             NVARCHAR (50) NOT NULL,
    [Designation]          NVARCHAR (50) NOT NULL,
    [AdminCreationDate]    DATE          NOT NULL,
    [AdminTerminationDate] DATE          NULL,
    CONSTRAINT [PK_Admin] PRIMARY KEY CLUSTERED ([AdminID] ASC)
);


GO
PRINT N'Creating Table [dbo].[AdminRegistration]...';


GO
CREATE TABLE [dbo].[AdminRegistration] (
    [ID]            INT           IDENTITY (1, 1) NOT NULL,
    [EmployeeID]    INT           NOT NULL,
    [AdminID]       INT           NOT NULL,
    [AdminPassword] NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_AdminRegistration] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Attendance]...';


GO
CREATE TABLE [dbo].[Attendance] (
    [AttendanceID] INT           IDENTITY (1, 1) NOT NULL,
    [EmployeeID]   INT           NOT NULL,
    [FirstName]    NVARCHAR (50) NOT NULL,
    [LastName]     NVARCHAR (50) NOT NULL,
    [Date]         DATE          NOT NULL,
    [Status]       NVARCHAR (50) NOT NULL,
    [CheckIn]      TIME (0)      NULL,
    [CheckOut]     TIME (0)      NULL,
    [ModifiedBy]   NVARCHAR (50) NULL,
    [ModifiedOn]   DATETIME      NULL,
    CONSTRAINT [PK_Attendance] PRIMARY KEY CLUSTERED ([AttendanceID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [EmployeeID]       INT            IDENTITY (10001, 1) NOT NULL,
    [FirstName]        NVARCHAR (50)  NOT NULL,
    [LastName]         NVARCHAR (50)  NOT NULL,
    [Gender]           NVARCHAR (50)  NOT NULL,
    [DateOfBirth]      DATETIME       NOT NULL,
    [Address]          NVARCHAR (MAX) NOT NULL,
    [Contact]          NVARCHAR (10)  NOT NULL,
    [Designation]      NVARCHAR (20)  NOT NULL,
    [SignInApprovedBy] NVARCHAR (50)  NULL,
    [JoiningDate]      DATETIME       NOT NULL,
    [ModifiedDate]     DATE           NULL,
    [ModifiedBy]       NVARCHAR (50)  NULL,
    [LeavingDate]      DATE           NULL,
    [AdminStatus]      BIT            NOT NULL,
    CONSTRAINT [PK_Employee] PRIMARY KEY CLUSTERED ([EmployeeID] ASC)
);


GO
PRINT N'Creating Table [dbo].[LeaveRecord]...';


GO
CREATE TABLE [dbo].[LeaveRecord] (
    [LeaveID]        INT            IDENTITY (1, 1) NOT NULL,
    [EmployeeID]     INT            NOT NULL,
    [FromDate]       DATE           NOT NULL,
    [ToDate]         DATE           NOT NULL,
    [DateOfRequest]  DATE           NOT NULL,
    [Reason]         NVARCHAR (300) NOT NULL,
    [AdministeredBy] NVARCHAR (50)  NULL,
    [ApprovalStatus] BIT            NULL,
    [Comment]        NVARCHAR (300) NULL,
    CONSTRAINT [PK_LeaveRecord] PRIMARY KEY CLUSTERED ([LeaveID] ASC)
);


GO
PRINT N'Creating Table [dbo].[Registration]...';


GO
CREATE TABLE [dbo].[Registration] (
    [ID]         INT            IDENTITY (1, 1) NOT NULL,
    [EmployeeID] INT            NOT NULL,
    [FirstName]  NVARCHAR (50)  NOT NULL,
    [LastName]   NVARCHAR (50)  NOT NULL,
    [UserName]   NVARCHAR (50)  NOT NULL,
    [Password]   NVARCHAR (100) NOT NULL,
    [IsValid]    BIT            NOT NULL,
    CONSTRAINT [PK_Registration] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating Table [dbo].[RegularizationRecord]...';


GO
CREATE TABLE [dbo].[RegularizationRecord] (
    [RegularizeID]    INT            IDENTITY (1, 1) NOT NULL,
    [AttendanceID]    INT            NOT NULL,
    [EmployeeID]      INT            NOT NULL,
    [RegularizeDate]  DATE           NOT NULL,
    [CheckedIn]       TIME (0)       NOT NULL,
    [CheckedOut]      TIME (0)       NOT NULL,
    [DateOfRequest]   DATE           NOT NULL,
    [AppliedCheckIn]  TIME (0)       NULL,
    [AppliedCheckOut] TIME (0)       NULL,
    [Reason]          NVARCHAR (300) NOT NULL,
    [RegularizedBy]   NVARCHAR (50)  NULL,
    [Approved]        BIT            NULL,
    [Comment]         NVARCHAR (300) NULL,
    CONSTRAINT [PK_RegularizationRecord] PRIMARY KEY CLUSTERED ([RegularizeID] ASC)
);


GO
PRINT N'Creating Default Constraint [dbo].[DF_Admin]...';


GO
ALTER TABLE [dbo].[Admin]
    ADD CONSTRAINT [DF_Admin] DEFAULT (getutcdate()) FOR [AdminCreationDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_AdminT]...';


GO
ALTER TABLE [dbo].[Admin]
    ADD CONSTRAINT [DF_AdminT] DEFAULT (getutcdate()) FOR [AdminTerminationDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Attendance_Date]...';


GO
ALTER TABLE [dbo].[Attendance]
    ADD CONSTRAINT [DF_Attendance_Date] DEFAULT (CONVERT([date],getutcdate())) FOR [Date];


GO
PRINT N'Creating Default Constraint [dbo].[DEFAULT_Attendance_CheckOut]...';


GO
ALTER TABLE [dbo].[Attendance]
    ADD CONSTRAINT [DEFAULT_Attendance_CheckOut] DEFAULT ('23:59:59') FOR [CheckOut];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Employee_Join]...';


GO
ALTER TABLE [dbo].[Employee]
    ADD CONSTRAINT [DF_Employee_Join] DEFAULT (getutcdate()) FOR [JoiningDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Employee_Modify]...';


GO
ALTER TABLE [dbo].[Employee]
    ADD CONSTRAINT [DF_Employee_Modify] DEFAULT (getutcdate()) FOR [ModifiedDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_Employee_Leave]...';


GO
ALTER TABLE [dbo].[Employee]
    ADD CONSTRAINT [DF_Employee_Leave] DEFAULT (getutcdate()) FOR [LeavingDate];


GO
PRINT N'Creating Default Constraint [dbo].[DF_LeaveRecord_DateOfRequest]...';


GO
ALTER TABLE [dbo].[LeaveRecord]
    ADD CONSTRAINT [DF_LeaveRecord_DateOfRequest] DEFAULT (getutcdate()) FOR [DateOfRequest];


GO
PRINT N'Creating Default Constraint [dbo].[DF_RegularizationRecord_DateOfRequest]...';


GO
ALTER TABLE [dbo].[RegularizationRecord]
    ADD CONSTRAINT [DF_RegularizationRecord_DateOfRequest] DEFAULT (getutcdate()) FOR [DateOfRequest];


GO
PRINT N'Creating Foreign Key [dbo].[FK_Admin_Employee]...';


GO
ALTER TABLE [dbo].[Admin] WITH NOCHECK
    ADD CONSTRAINT [FK_Admin_Employee] FOREIGN KEY ([EmployeeID]) REFERENCES [dbo].[Employee] ([EmployeeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_Attendance_Employee]...';


GO
ALTER TABLE [dbo].[Attendance] WITH NOCHECK
    ADD CONSTRAINT [FK_Attendance_Employee] FOREIGN KEY ([EmployeeID]) REFERENCES [dbo].[Employee] ([EmployeeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_LeaveRecord_Employee]...';


GO
ALTER TABLE [dbo].[LeaveRecord] WITH NOCHECK
    ADD CONSTRAINT [FK_LeaveRecord_Employee] FOREIGN KEY ([EmployeeID]) REFERENCES [dbo].[Employee] ([EmployeeID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_RegularizationRecord_Attendance]...';


GO
ALTER TABLE [dbo].[RegularizationRecord] WITH NOCHECK
    ADD CONSTRAINT [FK_RegularizationRecord_Attendance] FOREIGN KEY ([AttendanceID]) REFERENCES [dbo].[Attendance] ([AttendanceID]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_RegularizationRecord_Employee]...';


GO
ALTER TABLE [dbo].[RegularizationRecord] WITH NOCHECK
    ADD CONSTRAINT [FK_RegularizationRecord_Employee] FOREIGN KEY ([EmployeeID]) REFERENCES [dbo].[Employee] ([EmployeeID]);


GO
PRINT N'Creating Trigger [dbo].[PopulateAdminOnInsert]...';


GO
CREATE TRIGGER PopulateAdminOnInsert
on [dbo].[Employee]
AFTER INSERT
AS
BEGIN
    IF EXISTS (SELECT 1 FROM inserted WHERE AdminStatus = 1)
    BEGIN
        INSERT INTO [dbo].[Admin] (AdminStatus, EmployeeID, FirstName, LastName, Designation)
        SELECT AdminStatus, EmployeeID, FirstName, LastName, Designation
        FROM inserted
        WHERE AdminStatus = 1
    END
END
GO
PRINT N'Creating Trigger [dbo].[PopulateAdminOnUpdate]...';


GO
CREATE TRIGGER PopulateAdminOnUpdate
on [dbo].[Employee]
AFTER Update 
AS
BEGIN
	IF UPDATE (AdminStatus)
	BEGIN
	  INSERT INTO [dbo].[Admin](AdminStatus,EmployeeID,FirstName,LastName,Designation)
	  SELECT AdminStatus, EmployeeID, FirstName, LastName, Designation
	  FROM inserted
	  WHERE AdminStatus = 1
	END
END
GO
PRINT N'Creating Trigger [dbo].[ChangeAttendanceOnUpdate]...';


GO
CREATE TRIGGER [dbo].[ChangeAttendanceOnUpdate]
   ON [dbo].[LeaveRecord]
   AFTER UPDATE
AS 
BEGIN
	IF UPDATE (ApprovalStatus)
	BEGIN
		Declare @CurrentEmployeeID int;
		Set @CurrentEmployeeID = (Select EmployeeID from inserted);
		INSERT INTO [dbo].[Attendance] (EmployeeID, FirstName, LastName, Date, Status,CheckIn,CheckOut, ModifiedBy, ModifiedOn)
		VALUES((@CurrentEmployeeID),(Select FirstName from [dbo].[Employee] where EmployeeID = @CurrentEmployeeID),
			(Select LastName from [dbo].[Employee] where EmployeeID = @CurrentEmployeeID),
			 (Select ToDate from inserted),'leave',null, null, (Select AdministeredBy from inserted), GETDATE());
	END
END
GO
PRINT N'Creating Trigger [dbo].[RegularizeAttendanceOnUpdate]...';


GO
CREATE TRIGGER [dbo].[RegularizeAttendanceOnUpdate]
   ON [dbo].[RegularizationRecord]
   AFTER UPDATE
AS 
BEGIN
	IF UPDATE (Approved)
	BEGIN
	  UPDATE [dbo].[Attendance] SET CheckIn = AppliedCheckIn, CheckOut = AppliedCheckOut, ModifiedBy = RegularizedBy, ModifiedOn = GETUTCDATE()
	  FROM inserted 
	  Where inserted.Approved = 1 AND Attendance.AttendanceID = inserted.AttendanceID
	END
END
GO
PRINT N'Creating Procedure [dbo].[EmployeeLogin]...';


GO
CREATE PROCEDURE [dbo].[EmployeeLogin]
    @username VARCHAR(20),
    @password VARCHAR(20)
AS
BEGIN
    SET NOCOUNT ON;

    IF EXISTS (SELECT * FROM [dbo].[Registration] WHERE UserName = @username AND Password = @password and IsValid = 1)
        SELECT EmployeeID FROM [dbo].[Registration] WHERE UserName = @username AND Password = @password and IsValid = 1;
    ELSE
        SELECT 0;
END
GO
PRINT N'Creating Procedure [dbo].[spAdmin_GetByID]...';


GO
CREATE PROCEDURE [dbo].[spAdmin_GetByID]
	@adminID int
AS
BEGIN
	SELECT * FROM [dbo].[Admin] where AdminID = @adminID
END
GO
PRINT N'Creating Procedure [dbo].[spAdminLogin]...';


GO
CREATE PROCEDURE [dbo].[spAdminLogin]
	@adminID int,
	@adminpassword nvarchar(50)
AS
BEGIN
	IF EXISTS (SELECT * FROM [dbo].[AdminRegistration] WHERE AdminID = @adminID AND AdminPassword = @adminpassword)
        SELECT EmployeeID,AdminID FROM [dbo].[AdminRegistration] WHERE AdminID = @adminID AND AdminPassword = @adminpassword
    ELSE
        SELECT null;
END
GO
PRINT N'Creating Procedure [dbo].[spAttendance_CheckIn]...';


GO

CREATE PROCEDURE [dbo].[spAttendance_CheckIn]
	@EmployeeID int,
	@FirstName nvarchar(50),
	@LastName nvarchar(50),
	@Date date,
	@Status nvarchar(50) = 'Present',
	@CheckIn time(0),
	@AttendanceIdentity int OUTPUT

AS
BEGIN
	INSERT INTO [dbo].[Attendance](EmployeeID,FirstName,LastName,Date,Status,CheckIn)
	VALUES (@EmployeeID,@FirstName,@LastName,@Date,@Status,@CheckIn)

	SET @AttendanceIdentity = SCOPE_IDENTITY()
END
GO
PRINT N'Creating Procedure [dbo].[spAttendance_CheckOut]...';


GO
CREATE PROCEDURE [dbo].[spAttendance_CheckOut]
	@AttendanceID int,
	@CheckOut time
AS
BEGIN
	update [dbo].[Attendance] set CheckOut = @CheckOut where AttendanceID = @AttendanceID
END
GO
PRINT N'Creating Procedure [dbo].[spAttendance_GetAllByDate]...';


GO
CREATE PROCEDURE [dbo].[spAttendance_GetAllByDate]
	@EmployeeID int,
	@Date date
AS
BEGIN
	Select EmployeeID,FirstName,LastName,Date,Status,CheckIn,CheckOut,ModifiedBy,ModifiedOn FROM [dbo].[Attendance] where Date = @Date
END
GO
PRINT N'Creating Procedure [dbo].[spAttendance_GetAllByID]...';


GO
CREATE Procedure [dbo].[spAttendance_GetAllByID]
	@EmployeeID int
AS
Begin
	Select AttendanceID,EmployeeID,FirstName,LastName,Date,CheckIn,CheckOut,Status,ModifiedBy,ModifiedOn from [dbo].[Attendance] where EmployeeID = @EmployeeID
End
GO
PRINT N'Creating Procedure [dbo].[spAttendance_GetByIDandDate]...';


GO

CREATE PROCEDURE [dbo].[spAttendance_GetByIDandDate]
	@EmployeeID int,
	@Date date

AS
BEGIN
	SELECT Top 1 EmployeeID, Date,Status, 
		(Select MIN(CheckIn) from Attendance where EmployeeID = @EmployeeID and Date = @Date) as CheckIn,
		(Select MAX(CheckOut) from Attendance where EmployeeID = @EmployeeID and Date = @Date) as CheckOut,
		ModifiedBy, ModifiedOn
		FROM [dbo].[Attendance]
		WHERE EmployeeID = @EmployeeID AND Date = @Date
END
GO
PRINT N'Creating Procedure [dbo].[spCredentials_Insert]...';


GO
CREATE PROCEDURE [dbo].[spCredentials_Insert]
	@EmployeeID int,
	@FirstName nvarchar(50),
	@LastName nvarchar(50),
	@UserName nvarchar(50),
	@Password nvarchar(100),
	@IsValid bit
AS
BEGIN
	INSERT INTO [dbo].[Registration](EmployeeID, FirstName, LastName,UserName,Password,IsValid)
	VALUES (@EmployeeID, @FirstName,@LastName,@UserName,@Password,@IsValid)

	select 'true'
END
GO
PRINT N'Creating Procedure [dbo].[spEmployee_GetAll]...';


GO
CREATE PROCEDURE [dbo].[spEmployee_GetAll]
AS
BEGIN
	SELECT * FROM [dbo].[Employee]
END
GO
PRINT N'Creating Procedure [dbo].[spEmployee_GetByID]...';


GO
CREATE PROCEDURE [dbo].[spEmployee_GetByID]
@employeeID int
AS
BEGIN
	SELECT EmployeeID,FirstName,LastName,Gender,DateOfBirth,Address,Contact,Designation,SignInApprovedBy,JoiningDate,ModifiedDate,ModifiedBy,AdminStatus
	FROM [dbo].[Employee]
	WHERE EmployeeID = @employeeID;
END
GO
PRINT N'Creating Procedure [dbo].[spEmployee_InsertByEmployee]...';


GO
CREATE PROCEDURE [dbo].[spEmployee_InsertByEmployee]
	@FirstName nvarchar(50),
	@LastName nvarchar(50),
	@Gender nvarchar(50),
	@DateOfBirth datetime,
	@Address nvarchar(100),
	@Contact nvarchar(10),
	@Designation nvarchar(50),
	@SignInApprovedBy nvarchar(50),
	@JoiningDate datetime,
	@AdminStatus bit = 0,
	@FirstNameOutput nvarchar(50) OUTPUT,
	@LastNameOutput nvarchar(50) OUTPUT,
	@EmployeeIdentity int OUTPUT
AS
begin
	INSERT INTO dbo.[Employee](FirstName,LastName,Gender,DateOfBirth,
						Address,Contact,Designation,SignInApprovedBy,JoiningDate,AdminStatus)
	VALUES (@FirstName,@LastName,@Gender,@DateOfBirth,
						@Address,@Contact,@Designation,@SignInApprovedBy,@JoiningDate,@AdminStatus)
	SET @EmployeeIdentity = SCOPE_IDENTITY() 
	SET @FirstNameOutput= @FirstName
	SET @LastNameOutput = @LastName
end
GO
PRINT N'Creating Procedure [dbo].[spEmployee_UpdateByID]...';


GO
CREATE PROCEDURE [dbo].[spEmployee_UpdateByID]
	@employeeID int,
	@FirstName nvarchar(50),
	@LastName nvarchar(50),
	@Gender nvarchar(50),
	@DateOfBirth datetime,
	@Address nvarchar(100),
	@Contact nvarchar(10),
	@Designation nvarchar(50),
	@SignInApprovedBy nvarchar(50),
	@JoiningDate datetime,
	@ModifiedDate date,
	@ModifiedBy nvarchar(50),
	@AdminStatus bit
AS
BEGIN
	Update [dbo].[Employee]
	Set FirstName = @FirstName, LastName =@LastName, Gender=@Gender, DateOfBirth=@DateOfBirth,
		Address=@Address, Contact=@Contact, Designation=@Designation, SignInApprovedBy=@SignInApprovedBy, JoiningDate=@JoiningDate,
		ModifiedDate=GETDATE(), ModifiedBy=@ModifiedBy,LeavingDate = null, AdminStatus=@AdminStatus
	Where EmployeeID = @employeeID;
END
GO
PRINT N'Creating Procedure [dbo].[spLeaveRecord_Decision]...';


GO
CREATE PROCEDURE [dbo].[spLeaveRecord_Decision]
	@leaveID int,
	@AdministeredBy nvarchar(50),
	@ApprovalStatus bit,
	@Comment nvarchar(300)
AS
BEGIN
	UPDATE [dbo].[LeaveRecord]
	SET AdministeredBy = @AdministeredBy, ApprovalStatus = @ApprovalStatus, Comment = @Comment
	WHERE LeaveID = @leaveID;
END
GO
PRINT N'Creating Procedure [dbo].[spLeaveRecord_GetByID]...';


GO
CREATE PROCEDURE [dbo].[spLeaveRecord_GetByID]
	@leaveID int
AS
BEGIN
	SELECT * FROM [dbo].[LeaveRecord] WHERE LeaveID = @leaveID;
END
GO
PRINT N'Creating Procedure [dbo].[spLeaveRecord_InsertRequest]...';


GO
CREATE PROCEDURE [dbo].[spLeaveRecord_InsertRequest]
	@EmployeeID int,
	@FromDate date,
	@ToDate date,
	@DateOfRequest date,
	@Reason nvarchar(50),
	@LeaveRequestID int OUTPUT
AS
BEGIN
	INSERT INTO [dbo].[LeaveRecord] (EmployeeID,FromDate, ToDate, DateOfRequest, Reason)
	VALUES (@EmployeeID, @FromDate, @ToDate, @DateOfRequest, @Reason)

	SET @LeaveRequestID = SCOPE_IDENTITY();
END
GO
PRINT N'Creating Procedure [dbo].[spLeaveRecord_ListOfPendings]...';


GO
CREATE PROCEDURE [dbo].[spLeaveRecord_ListOfPendings]
AS
BEGIN
	Select * From [dbo].[LeaveRecord] Where ApprovalStatus is null ORDER BY EmployeeID;
END
GO
PRINT N'Creating Procedure [dbo].[spRegularization_Decision]...';


GO
CREATE PROCEDURE [dbo].[spRegularization_Decision]
	@regularizeID int,
	@regularizedBy nvarchar(50),
	@approved bit,
	@comment nvarchar(300)
AS
BEGIN
	Update [dbo].[RegularizationRecord]
	SET RegularizedBy = @regularizedBy, Approved = @approved, Comment = @comment
	Where RegularizeID = @regularizeID;
END
GO
PRINT N'Creating Procedure [dbo].[spRegularization_GetByID]...';


GO
CREATE PROCEDURE [dbo].[spRegularization_GetByID]
	@regularizeID int
AS
BEGIN
	SELECT * FROM [dbo].[RegularizationRecord] WHERE RegularizeID = @regularizeID;
END
GO
PRINT N'Creating Procedure [dbo].[spRegularization_InsertRequest]...';


GO
CREATE PROCEDURE [dbo].[spRegularization_InsertRequest]
	@AttendanceID int,
	@EmployeeID int OUTPUT,
	@RegularizeDate date,
	@CheckedIn time(0),
	@CheckedOut time(0),
	@DateOfRequest date,
	@AppliedCheckIn time(0),
	@AppliedCheckOut time(0),
	@Reason nvarchar(300),
	@RegularizeIdentity int OUTPUT
AS
BEGIN
	INSERT INTO [dbo].[RegularizationRecord] 
	(AttendanceID,EmployeeID,RegularizeDate,CheckedIn, CheckedOut, DateOfRequest,AppliedCheckIn,AppliedCheckOut,Reason)
	VALUES
	(@AttendanceID,@EmployeeID,@RegularizeDate,@CheckedIn,@CheckedOut,@DateOfRequest,@AppliedCheckIn,@AppliedCheckOut,@Reason)

	Set @RegularizeIdentity = SCOPE_IDENTITY();
END
GO
PRINT N'Creating Procedure [dbo].[spRegularization_ListOfPendings]...';


GO
CREATE PROCEDURE [dbo].[spRegularization_ListOfPendings]
AS
BEGIN
	SELECT * FROM [dbo].[RegularizationRecord] where Approved is null Order by DateOfRequest ASC;
END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Admin] WITH CHECK CHECK CONSTRAINT [FK_Admin_Employee];

ALTER TABLE [dbo].[Attendance] WITH CHECK CHECK CONSTRAINT [FK_Attendance_Employee];

ALTER TABLE [dbo].[LeaveRecord] WITH CHECK CHECK CONSTRAINT [FK_LeaveRecord_Employee];

ALTER TABLE [dbo].[RegularizationRecord] WITH CHECK CHECK CONSTRAINT [FK_RegularizationRecord_Attendance];

ALTER TABLE [dbo].[RegularizationRecord] WITH CHECK CHECK CONSTRAINT [FK_RegularizationRecord_Employee];


GO
PRINT N'Update complete.';


GO
